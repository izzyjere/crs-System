// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NRCReg;

#nullable disable

namespace NRCReg.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220925125515_init5")]
    partial class init5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CRS.Shared.Citizen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Citizens");
                });

            modelBuilder.Entity("CRS.Shared.NRCNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NRCNumbers");
                });

            modelBuilder.Entity("CRS.Shared.Citizen", b =>
                {
                    b.OwnsOne("CRS.Shared.PersonalDetails", "PersonalDetails", b1 =>
                        {
                            b1.Property<int>("CitizenId")
                                .HasColumnType("int");

                            b1.Property<string>("Chief")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("DateOfBirth")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("DateOfRegistration")
                                .HasColumnType("datetime2");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Gender")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NRC")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PlaceOfBirth")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Village")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CitizenId");

                            b1.ToTable("CitizenDetails", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CitizenId");

                            b1.OwnsOne("CRS.Shared.Biometric", "ThumbPrintData", b2 =>
                                {
                                    b2.Property<int>("PersonalDetailsCitizenId")
                                        .HasColumnType("int");

                                    b2.Property<byte[]>("Data")
                                        .IsRequired()
                                        .HasColumnType("varbinary(max)");

                                    b2.Property<Guid>("Guid")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("OwnerId")
                                        .HasColumnType("int");

                                    b2.HasKey("PersonalDetailsCitizenId");

                                    b2.ToTable("ThumbPrintData", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("PersonalDetailsCitizenId");
                                });

                            b1.Navigation("ThumbPrintData")
                                .IsRequired();
                        });

                    b.Navigation("PersonalDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
